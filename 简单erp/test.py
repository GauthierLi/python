# -*-coding:utf-8-*-
# 定义公用类

class 公司类():
    # 贷款利息，时间
    pass

    # 定义厂房价格， 单位统一按万计算
    厂房数据 = {'租': {'大': 40., '小': 18.}, '买': {'大': 400., '小': 180.}}

    # 生产线数据
    生产线数据 = {'手工': {'投资总额': 30, '每季投资': 30, '安装周期': 0, '生产周期': 2,
                    '总转产费用': 0, '转产周期': 0, '维修费': 5, '折旧费': 6, '折旧时间': 12},
             '自动线': {'投资总额': 150, '每季投资': 50, '安装周期': 3, '生产周期': 1,
                     '总转产费用': 20, '转产周期': 1, '维修费': 20, '折旧费': 30, '折旧时间': 12},
             '柔性线': {'投资总额': 200, '每季投资': 50, '安装周期': 4, '生产周期': 1,
                     '总转产费用': 0, '转产周期': 0, '维修费': 20, '折旧费': 40, '折旧时间': 12}}

    # 市场开拓数据，开发费用单位是万每年，开发时间是季度
    市场开拓数据 = {'本地': {'开发费用': 10, '开发时间': 4},
              '区域': {'开发费用': 10, '开发时间': 4},
              '国内': {'开发费用': 10, '开发时间': 8},
              '亚洲': {'开发费用': 10, '开发时间': 12}}

    # iso认证数据
    认证数据 = {'ISO9000': {'开发费用': 10, '开发时间': 8},
            'ISO14000': {'开发费用': 20, '开发时间': 8}}

    # 产品研发数据
    产品研发数据 = {'产品1': {'开发费用': 10, '开发时间': 2, '加工费': 10, '直接成本': 20},
              '产品2': {'开发费用': 10, '开发时间': 3, '加工费': 10, '直接成本': 30},
              '产品3': {'开发费用': 10, '开发时间': 4, '加工费': 10, '直接成本': 40}}

    # 原料数据
    原料数据 = {'原材料1': {'购买单价': 10, '提前期': 1},
            '原材料2': {'购买单价': 10, '提前期': 1},
            '原材料3': {'购买单价': 10, '提前期': 3}}

    # 状态 运营或者破产判断
    # 公司有厂房，生产线，资产，负债，市场，产品，原材料，季度
    def __init__(self):
        self.厂房 = []
        self.生产线 = None
        self.资产 = 1000000.
        self.负债 = 0.
        self.市场 = None
        self.产品 = {'产品1': 0., '产品2': 0., '产品3': 0., '产品4': 0.}
        self.原材料 = {'原材料1': 0., '原材料2': 0., '原材料3': 0.}
        self.季度 = 1
        self.流水 = ['\n']
        self.ISO = {'ISO9000': None, 'ISO14000': None}
        print('-------------------运营-----------------------')
        self.print_data()

    # 方法 查看公司数据
    def print_data(self):
        q = divmod(self.季度, 4)
        print('--------------第{}年，第{}季度数据--------------'.format(q[0], q[1]))
        print('厂房情况：', self.厂房)
        print('生产线：', self.生产线)
        print('资产：', self.资产)
        print('负债:', self.负债)
        print('市场:', self.市场)
        print('ISO认证', self.ISO)
        print('流水:', end=' ')
        for ele in self.流水:
            print(ele)

    # 决策 租买厂房
    def 租买厂房(self, 大小, 租或者买):
        if 大小 == '大':
            self.厂房.append({'1': None, '2': None, '3': None, '4': None})
        else:
            self.厂房.append({'1': None, '2': None})
        if 租或者买 == '租':
            self.厂房[-1]['租费'] = self.厂房数据['租'][大小]
        else:
            self.厂房[-1]['租费'] = 0
            self.资产 -= self.厂房数据['买'][大小]
            self.流水.append('\t购买厂房花费{},剩余资产{}'.format(self.厂房数据['买'][大小], self.资产))
            print('购买厂房花费{},剩余资产{}'.format(self.厂房数据['买'][大小], self.资产))

    # 方法 判断厂房是否有空位
    def check_厂房(self):
        if len(self.厂房) == 0:
            return [None, None]
        else:
            for ele in self.厂房:
                for key in ele.keys():
                    if key == '租费':
                        continue
                    if ele[key] is None:
                        return [self.厂房.index(ele), key]
                return 'is full'

    # 决策 购买生产线
    def 购买生产线(self, 型号):
        # 检查厂房是否有位置
        q_list = self.check_厂房()
        if q_list == [None, None] or q_list == 'is full':
            print('无厂房！或厂房空位不足！')
        else:
            # 存放生产线
            self.厂房[q_list[0]][q_list[1]] = self.生产线数据[型号]

    # 决策 融资
    def 融资(self, 类型, 数量):
        pass

    # 决策 iso 认证
    def 认证(self, 类型):
        pass

    # 决策 原料购进
    def 原料购进(self, 原料种类, 数量):
        pass

    # 决策 市场开拓
    def 市场开拓(self, 市场类型):
        pass

    # 决策 产品研发
    def 产品研发(self, 产品):
        pass

    # 决策 放弃研发
    def 放弃研发(self, 产品):
        pass

    # ----------------------------------------------------------------------------------------------------------------------
    # 方法 厂房租费扣除
    def 厂房收租(self):
        q = 0
        if len(self.厂房) == 0:
            q = 0
        else:
            for ele in self.厂房:
                q += ele['租费']
        self.资产 -= q
        print('厂房租费{},剩余资产{}'.format(q, self.资产))
        self.流水.append('\t厂房租费{},剩余资产{}'.format(q, self.资产))

    # 生产线每季投资，以及维修费
    def 生产线每季投入(self):
        q = 0.
        q_list = self.check_厂房()
        if q_list != [None, None]:
            for ele in self.厂房:
                for ele_ele in ele:
                    if ele_ele != '租费':
                        q += ele[ele_ele]['每季投资']
                        q += ele[ele_ele]['维修费']
        self.资产 -= q
        print('生产线本季度投入{},资产剩余{}'.format(q, self.资产))
        self.流水.append('\t生产线本季度投入{},资产剩余{}'.format(q, self.资产))

    # 沙盘运作
    def 沙盘运作(self):
        self.季度 += 1
        if self.资产 >= self.负债:
            print('-------------------运营-----------------------')
        else:
            print('--------------------破产----------------------')
        self.厂房收租()
        self.生产线每季投入()
        my_company.print_data()


my_company = 公司类()
my_company.租买厂房('大', '买')
for i in range(4):
    my_company.购买生产线('手工')
my_company.购买生产线('自动线')
my_company.沙盘运作()
my_company.沙盘运作()
